# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_call:
    inputs:
      suffix:
        required: false
        type: string
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore
      run: dotnet restore
      working-directory: src
    - name: Set Version
      shell: pwsh
      run: |
        [xml]$xml = Get-Content -path  "${{github.workspace}}/version.props" -Raw
        $version = $xml.Project.PropertyGroup.VersionPrefix;
        $suffix = "${{ inputs.suffix }}";
        if(![string]::IsNullOrEmpty($suffix)){
          $ticks=(Get-Date).Ticks;
          $version= $version+"-"+$suffix+"."+$ticks
          $xml.Project.PropertyGroup.VersionSuffix = $suffix+"."+$ticks
          Write-Host $version
          [xml]$xml.Save("${{github.workspace}}/version.props")
        }
    - name: Build
      run: dotnet build --no-restore
      working-directory: src
    - name: Check for duplicate code
      uses: platisd/duplicate-code-detection-tool@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        directories: "."
    - name: Test
      run: dotnet test
      working-directory: src
    
    - name: Generate Schema
      run: dotnet run --project ./SchemaGenerator/SchemaGenerator.csproj
      working-directory: src
    
    - name: Dotnet Pack
      run: dotnet pack --output ../build.out/ 
      working-directory: src
      
    - name: Upload nuget file as build artifact      
      uses: actions/upload-artifact@v2
      with:
        name: Nuget Build Output
        path: ./build.out/  

